{"version":3,"sources":["Components/PhoneBook.js","Components/ContactList.js","Components/Filter.js","App.js","index.js"],"names":["PhoneBook","state","name","number","handleSubmit","e","preventDefault","console","log","props","onAddContact","setState","handleChange","target","value","onSubmit","this","type","onChange","Component","ContactList","contacts","onRemove","map","contact","key","id","onClick","Filter","filterChange","App","filter","onAddContacts","uuidv4","find","alert","prevState","changeFilter","removeContact","contactId","visibleContacts","toLowerCase","includes","toLocaleLowerCase","visContacts","ReactDOM","render","document","getElementById"],"mappings":"yQAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACdA,EAAEC,iBACFC,QAAQC,IAAI,EAAKP,OACjB,EAAKQ,MAAMC,aAAa,EAAKT,MAAMC,KAAM,EAAKD,MAAME,QACpD,EAAKQ,SAAS,CAAET,KAAM,GAAIC,OAAQ,M,EAGpCS,aAAe,SAACP,GAAO,IAAD,EACIA,EAAEQ,OAAlBX,EADY,EACZA,KAAMY,EADM,EACNA,MACd,EAAKH,SAAL,eACGT,EAAOY,K,uDAKV,OACE,0BAAMC,SAAUC,KAAKZ,cACnB,sCAEE,2BACEa,KAAK,OACLH,MAAOE,KAAKf,MAAMC,KAClBgB,SAAUF,KAAKJ,aACfV,KAAK,UAGT,8CAEE,2BACEe,KAAK,SACLH,MAAOE,KAAKf,MAAME,OAClBe,SAAUF,KAAKJ,aACfV,KAAK,YAGT,4BAAQe,KAAK,UAAb,qB,GAzC+BE,aC2BxBC,EA1BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OAClB,4BACGD,EAASE,KAAI,SAACC,GAAD,OACZ,wBAAIC,IAAKD,EAAQE,IACf,2BACGF,EAAQtB,KADX,MACoBsB,EAAQrB,QAE5B,4BAAQc,KAAK,SAASU,QAAS,kBAAML,EAASE,EAAQE,MAAtD,gBCWOE,EAlBA,SAAC,GAA6B,IAA3Bd,EAA0B,EAA1BA,MAAOe,EAAmB,EAAnBA,aACvB,OACE,6BACE,yCACA,2BACEZ,KAAK,OACLH,MAAOA,EACPI,SAAU,SAACb,GAAD,OAAOwB,EAAaxB,EAAEQ,OAAOC,Y,QCJ1BgB,E,4MACnB7B,MAAQ,CACNoB,SAAU,CACR,CAAEK,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEuB,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,cAEhD4B,OAAQ,I,EAGVC,cAAgB,SAAC9B,EAAMC,GACrB,IAAMqB,EAAU,CACdE,GAAIO,eACJ/B,OACAC,UAKF,GAHqB,EAAKF,MAAMoB,SAASa,MACvC,SAAAV,GAAO,OAAIA,EAAQtB,OAASA,KAI5B,OADAiC,MAAM,oDACCX,EAEP,EAAKb,UAAS,SAAAyB,GACZ,MAAO,CACLf,SAAS,GAAD,mBAAMe,EAAUf,UAAhB,CAA0BG,S,EAM1Ca,aAAe,SAAAN,GACb,EAAKpB,SAAS,CAAEoB,Y,EAGlBO,cAAgB,SAAAC,GACd,EAAK5B,UAAS,SAAAyB,GAEZ,OADA7B,QAAQC,IAAI4B,GACL,CACLf,SAAUe,EAAUf,SAASU,QAC3B,SAAAP,GAAO,OAAIA,EAAQE,KAAOa,U,EAMlCC,gBAAkB,WAAO,IAAD,EACO,EAAKvC,MAA1BoB,EADc,EACdA,SAAUU,EADI,EACJA,OAElB,OAAOV,EAASU,QAAO,SAAAP,GAAO,OAC5BA,EAAQtB,KAAKuC,cAAcC,SAASX,EAAOY,yB,uDAIrC,IACAZ,EAAWf,KAAKf,MAAhB8B,OACFa,EAAc5B,KAAKwB,kBAEzB,OADAjC,QAAQC,IAAIQ,KAAKf,OAEf,oCACE,kBAAC,EAAD,CAAWS,aAAcM,KAAKgB,gBAC9B,kBAAC,EAAD,CAAQlB,MAAOiB,EAAQF,aAAcb,KAAKqB,eAC1C,kBAAC,EAAD,CAAahB,SAAUuB,EAAatB,SAAUN,KAAKsB,qB,GA/D1BnB,aCFjC0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fffc7c95.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class PhoneBook extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Phone Number\r\n          <input\r\n            type=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\"> Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onRemove }) => (\r\n  <ul>\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id}>\r\n        <p>\r\n          {contact.name} : {contact.number}\r\n        </p>\r\n        <button type=\"submit\" onClick={() => onRemove(contact.id)}>\r\n          Remove\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, filterChange }) => {\r\n  return (\r\n    <div>\r\n      <h2>Contacts </h2>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => filterChange(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport PhoneBook from './Components/PhoneBook';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  onAddContacts = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const contactCheck = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n    if (contactCheck) {\n      alert('А contact with the same name already exists');\n      return contact;\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      console.log(prevState);\n      return {\n        contacts: prevState.contacts.filter(\n          contact => contact.id !== contactId,\n        ),\n      };\n    });\n  };\n\n  visibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visContacts = this.visibleContacts();\n    console.log(this.state);\n    return (\n      <>\n        <PhoneBook onAddContact={this.onAddContacts} />\n        <Filter value={filter} filterChange={this.changeFilter} />\n        <ContactList contacts={visContacts} onRemove={this.removeContact} />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}